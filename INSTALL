INSTALL
=======

Notes for installing and configuring STOQS.  Make sure that your system has all of the
prerequisites noted in the PREREQUISITES file and read the README before embarking on
following these instructions.

1.  Copy the 'privateSettings.template' file (in the main stoqs directory)  to 
    'privateSettings' and edit it with the confidential information that is specific to 
    your installation.  This is also where you would add additional campaign-specific 
    databases to the project.  Follow the instructions in the file and do not share the
    information you put in this file.
       
       
2.  Installing and configuring Posgresql and doing it in a secure manner is beyond the scope
    of this documentation.  Please refer to the appropriate sources (http://www.postgresql.org/
    or your DBA) in order to connect to the database with system admin priveledges.  You will
    need these priveleges to create and drop databases.  STOQS is currently being developed
    using postgresql-9.1.


3.  There is one thing to change in the postgresql.conf so that all of the non-django queries 
    work with respect to timezone.  Uncomment the line: 

        #timezone = '(defaults to server environment setting)'
        
    and change it to:
    
        timezone = 'GMT'

    Then reload the configuration file with:

        sudo /sbin/service postgresql-9.1 reload


4.  Most direct interaction with the postgres database is done via commands at the psql prompt.
    To get the psql prompt become the postgres user with "su postgres" and enter the postgres
    password.  This works if the postgres  account has been set up for login.  The default 
    postgres installation creates the postgres account without login capability.  In this 
    case you can become postgres via root (enter the root password when prompted) and then 
    run the psql command:

        su root -c "su postgres"
        psql

    Using Postgres's 'psql' command with administrator priveledges (which you have as user
    postgres) make sure that there is a spatial types database named "template_postgis".  You 
    may need to make a copy of the template installed from yum with a psql command like:

        create database template_postgis with template postgis;

    The Django test runner requires the spatial types template to have the name template_postgis.

    Create a 'stoqsadm' role (the credentials must match what you configured in privateSettings
    for DATABASE_USER and DATABASE_PASSSWORD) e.g.:
    
        create role stoqsadm login password 'password_of_your_choice';

    Include the single quotes; the password is inside the single quotes. 

    
5.  Create your STOQS database(s) and assign permissions at the psql prompt (assuming 
    that the DATABASE_USER setting in privateSettings is 'stoqsadm'):

        create database stoqs owner=stoqsadm template=template_postgis;
        \c stoqs
        grant all on all tables in schema public to stoqsadm;
    
    Repeat for additional campaign specific databases.


For the following commands where you run 'python manage.py ' with various options you will need your shell
to be in the virtual environment that you created in PREREQUISITES - unless all of the packages have been
installed at the system level.  Make sure that you've entered 'source venv-stoqs/bin/activate' in each
window where you run the following command.  Your shell prompt will begin with '(venv-stoqs)' as an
indication that you are in the virtual environment.

6.  Sync the model with the database:

        python manage.py syncdb                 # For the default stoqs database
    
    Answer 'no' when asked to create a superuser unless you wish to use the admin interface.
    If you have additional databases sync them with the --database option:
    
        python manage.py syncdb --database=stoqs_<campaign>     # For campaign specific databases 
    

7.  Start the development web server:

        export LD_LIBRARY_PATH=/usr/local/lib/                  # Needed if packages, such as gdal, were installed here
        export GDAL_DATA=/usr/share/gdal/                       # Needed if epsg support files can't be found - your dir may vary
        python manage.py runserver 0.0.0.0:8000 
    
    
8.  Optional: Start the celerey daemon (which services long-running tasks) in another window:

        python manage.py celeryd -l INFO


9.  Load some data:

    Execute at the (venv-stoqs) shell prompt: 

        loaders/loadTestData.py 

    If you get this error: django.db.utils.DatabaseError: invalid byte sequence for encoding "UTF8": 0x00
    make sure you have installed Django patch #16778 to the django/contrib/gis/db/backends/postgis/adapter.py
    file in your venv-stoqs/lib/python2.6/site-packages/ (or similar) folder.

    If you get the message "Data load complete, 498 records loaded" followed by some sample load messages
    then you will have successfully loaded some data from MBARI's AUVCTD Dorado OPeNDAP data archive.  
    You should be able to see an ajax-driven user interface  web page at:

        http://localhost:8000/default/query/ 
    
    Refer to urls.py and stoqs/tests.py for a complete list of url patterns supported.
    

If you've made it this far you have a working STOQS installation on your computer.  Congratulations!

To continue on to the next steps please read the instructions in the DEVELOPMENT or PRODUCTION files.

--
Mike McCann
MBARI 21 January 2013

