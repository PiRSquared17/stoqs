Directory analysis
==================

Miscellaneous contributed scripts and programs are located here.

As of February 2014 these scripts exist:

    dbconn_jdbc_stoqs.m:        Matlab m-file to execute SQL against specified STOQS database and
                                return columns in a Matlab structure.

    trajectory_biplots.py:      Python script to step through trajectory data from mobile platforms
                                and produce biplots of measured parameter vs. measured parameter
                                along with associated temporal and spatial tracks. Requires
                                Python 2.7 for cartopy to work.

    crossproduct_biplots.py:    Python script to produce scatter plots and compute correlations
                                between every single Parameter in a STOQS database.


Instructions for packaging in CDE so that Python scripts can run without a full STOQS install:
----------------------------------------------------------------------------------------------

0. Install CDE on your system from http://www.pgbovine.net/cde.html, e.g.:

    cd ~/dev
    git clone git://github.com/pgbovine/CDE.git
    cd CDE
    make

This documentation refers to $STOQSHG_DIR, which will be something like ~/dev/stoqshg or /opt/stoqshg.  

1. Make sure that the privateSettings file in $STOQSHG_DIR contains Database credentials that you don't
   mind sharing with the whole world.  They should be for a role that has only SELECT-only privileges 
   on your databases, such as 'everyone', 'guest'.  The MY_DATABASES entries sould contain entries for 
   the databases you want people to use.  The DATABASE_HOST needs to be a name accessible to clients of 
   your target audience.  For example:

    export STOQSHG_DIR=~/dev/stoqshg 
    -or- 
    export STOQSHG_DIR=/opt/stoqshg

    vi $STOQSHG_DIR/privateSettings

    ...
    DATABASE_USER = 'everyone'
    DATABASE_PASSWORD = 'guest'

    DATABASE_HOST = 'kraken.shore.mbari.org'
    ...

   You may find it handy to save a separate version of privateSettings on your development system for 
   temporarily copying in place for creation of the cde-package, e.g.:

    cp privateSettings privateSettings.save
    cp privateSettings.kraken privateSettings

2. Execute stoqs script(s) on target architecture with 'cde' command, e.g.:

    cd $STOQSHG_DIR/contrib/analysis
    ~/dev/CDE/cde ./trajectory_biplots.py -d default -p dorado -x salinity -y temperature
    ~/dev/CDE/cde ./crossproduct_biplots.py -d default 

   Note: Execute a real command, not just the --help option.

3. Copy the appropriate README_CDE to cde-package, e.g.:

    cp README_CDE cde-package

4. Tar and gzip the directory using a name suitable for the achitecture ('_32bit' or '_64bit'), e.g.:

    tar -cvf stoqs_biplots_32bit.tar cde-package
    gzip stoqs_biplots_32bit.tar

    -or- 

    tar -cvf stoqs_biplots_64bit.tar cde-package
    gzip stoqs_biplots_64bit.tar

5. Copy tarball to an appropriate server, e.g.:

    scp stoqs_biplots_32bit.tar.gz stoqsadm@odss.mbari.org:/data/canon/2013_Sep/Applications

    -or-

    scp stoqs_biplots_64bit.tar.gz stoqsadm@odss.mbari.org:/data/canon/2013_Sep/Applications

6. Test on another server that has never seen STOQS, Django, PostgreSQL or any of the other packages that are
   self-contained in cde-package, e.g.:

    wget "https://odss.mbari.org/data/canon/2013_Sep/Applications/stoqs_biplots_32bit.tar.gz"
    zcat stoqs_biplots_32bit.tar.gz | tar -xvf -

    -or-

    wget "https://odss.mbari.org/data/canon/2013_Sep/Applications/stoqs_biplots_64bit.tar.gz"
    zcat stoqs_biplots_64bit.tar.gz | tar -xvf -

   Follow instructions in cde-package/README_CDE

7. Remove the cde-package and .tar.gz file you created in contrib/analysis and copy privateSettings.save
   file to privateSettings if using your development system; if using production system return your
   database credentials back to stoqsadm or else your database loads will fail.

--
Mike McCann
20 February 2014
